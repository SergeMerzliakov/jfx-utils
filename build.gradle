import java.text.SimpleDateFormat

plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.6.10"
    id 'org.openjfx.javafxplugin' version "0.0.10"
    id 'maven-publish'
}

def KOTLIN_VERSION = "1.6.10"

def JFX_INSTALL = '/Library/Java/javafx/17.0.2.ea1'

group 'org.epistatic'

def jarVersion = "1.2.8"

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.epistatic'
            artifactId = 'jfx-utils'
            version = "$jarVersion"

            from components.java
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://nexus.gluonhq.com/nexus/content/repositories/releases/"
    }

}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}


javafx {
    // version = "17"  when javafx plugin fixed
    //https://github.com/openjfx/javafx-gradle-plugin/issues/112
    sdk = "${JFX_INSTALL}"
    modules = [ 'javafx.controls', 'javafx.fxml' ] //'javafx.swing'
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:${KOTLIN_VERSION}"
    api "org.jetbrains.kotlin:kotlin-reflect:${KOTLIN_VERSION}"
    api "com.google.code.gson:gson:2.9.0"

    api "org.apache.logging.log4j:log4j-api:2.15.0"

    testImplementation "junit:junit:4.12" // testfx does not support Junit 5
    testImplementation "org.assertj:assertj-core:3.13.2"
    testImplementation "io.mockk:mockk:1.9.3"
}

compileKotlin {
    kotlinOptions.jvmTarget = "16"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "16"
}

jar {
    manifest.attributes('Multi-Release': 'false')
    manifest.attributes('Jar-Version': "$jarVersion")
    manifest.attributes('Author': 'Serge Merzliakov - Copyright 2022')
    manifest.attributes('Build-Date': new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(new Date()))
    doFirst {
        version = "$jarVersion"
    }
}

// tests run in headless mode by default, to watch tests pass in -DshowTests=true on command line
test {
    if (System.getProperty('showTests') != null)
        systemProperty 'headless', false
    else
        systemProperty 'headless', true
}


task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}
